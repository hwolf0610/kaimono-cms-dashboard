{"version":3,"sources":["./src/app/reset-password/reset-password-routing.module.ts","./src/app/reset-password/reset-password.component.ts","./src/app/reset-password/reset-password.component.html","./src/app/reset-password/reset-password.module.ts"],"names":[],"mappings":"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","file":"reset-password-reset-password-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ResetPasswordComponent } from './reset-password.component';\r\n//import { OtpVerifyComponent } from './otp-verify.component';\r\n\r\n//import { DashboardComponent } from './dashboard.component';\r\n//import { AuthGuard } from 'app/shared/auth/auth-guard.service';\r\nconst routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: ResetPasswordComponent,\r\n        data: {\r\n            title: 'resetpassword'\r\n        },\r\n\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class resetPassRoutingmodule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from \"../pages/login/auth.service\";\r\nimport { ToastEnum, UtilService } from \"../../service/util.service\";\r\n\r\n@Component({\r\n\tselector: 'app-reset-password',\r\n\ttemplateUrl: './reset-password.component.html',\r\n\tstyleUrls: ['./reset-password.component.scss']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\tpublic resetPassword = {\r\n\t\tnewPassword: '',\r\n\t\tconfirmPassword: '',\r\n\t\temail: '',\r\n\t\tverificationToken: ''\r\n\t};\r\n\r\n\tconstructor(private router: Router, private utilService: UtilService, private authService: AuthService, private activatedRoute: ActivatedRoute) {\r\n\t\tthis.activatedRoute.queryParams.subscribe(params => {\r\n\t\t\tif (params.email) {\r\n\t\t\t\tthis.resetPassword.email = params.email;\r\n\t\t\t\tthis.resetPassword.verificationToken = sessionStorage.getItem('verificationToken');\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\t// resets admin password\r\n\tpublic resetAdminPassword(): void {\r\n\t\tconst body = {\r\n\t\t\tnewPassword: this.resetPassword.newPassword,\r\n\t\t\temail: this.resetPassword.email,\r\n\t\t\tverificationToken: this.resetPassword.verificationToken\r\n\t\t}\r\n\t\tthis.authService.resetPassword(body).subscribe((res: any) => {\r\n\t\t\tif (res.response_code !== 200) {\r\n\t\t\t\treturn this.utilService.showToast(res.response_data, \"ERROR\", ToastEnum.ERROR, true);\r\n\t\t\t}\r\n\t\t\tthis.utilService.showToast(res.response_data, \"SUCCESS\", ToastEnum.SUCCESS, true);\r\n\t\t\tsessionStorage.removeItem('token');\r\n\t\t\tsessionStorage.removeItem('verificationToken');\r\n\t\t\tthis.router.navigate(['login']);\r\n\t\t}, () => this.utilService.showToast(\"ERROR_DATA\", \"ERROR\", ToastEnum.ERROR, true));\r\n\t}\r\n\r\n}\r\n","<!--Forgot Password Starts-->\r\n<section id=\"forgot-password\">\r\n    <div class=\"container-fluid forgot-password-bg\">\r\n        <div class=\"row full-height-vh m-0  d-flex align-items-center justify-content-center\">\r\n            <div class=\"col-md-7 col-sm-12\">\r\n                <div class=\"card\">\r\n                    <div class=\"card-content\">\r\n                        <div class=\"card-body fg-image\">\r\n                            <div class=\"row m-0\">\r\n                                <div class=\"col-lg-6 d-none d-lg-block text-center py-3\">\r\n                                    <img src=\"../../../../assets/img/gallery/forgot.png\" alt=\"\" class=\"img-fluid\"\r\n                                         width=\"300\" height=\"230\"/>\r\n                                </div>\r\n\r\n                                <div class=\"col-lg-6 col-md-12 bg-white px-4 pt-3\">\r\n                                    <form #f=\"ngForm\" (ngSubmit)=\"resetAdminPassword()\">\r\n                                        <h4 class=\"card-title mb-2\">{{\"RESET_PASSWORD\" | translate}}</h4>\r\n                                        <p class=\"card-text mb-3\">\r\n                                            {{\"PASS\" | translate}}\r\n                                        </p>\r\n                                        <input type=\"password\" class=\"form-control mb-3\"\r\n                                               placeholder=\"{{'NEW_PASSWORD' | translate}}\" name=\"new\" minlength=\"5\"\r\n                                               maxlength=\"35\" [(ngModel)]=\"resetPassword.newPassword\" #new=\"ngModel\"\r\n                                               required/>\r\n                                        <span class=\"help-block\" *ngIf=\"new?.touched && new?.errors?.required\"\r\n                                              style=\"color:red\">\r\n                                            <small>{{\"THIS_FIELD_IS_REQUIRED*\" | translate}}</small>\r\n                                        </span>\r\n                                        <span class=\"help-block\" *ngIf=\"new?.dirty && new?.errors?.minlength\">\r\n                                            <small class=\"text-danger\">{{\"MIN_PASS\" | translate}}</small>\r\n                                        </span>\r\n                                        <span class=\"help-block\" *ngIf=\"new?.dirty && new?.errors?.maxlength\">\r\n                                            <small class=\"text-danger\">{{\"MAX_PASS\" | translate}}</small>\r\n                                        </span>\r\n                                        <input type=\"password\" class=\"form-control mb-3\"\r\n                                               placeholder=\"{{'CONFIRM_PASSWORD' | translate}}\"\r\n                                               name=\"conf\" [(ngModel)]=\"resetPassword.confirmPassword\" minlength=\"5\"\r\n                                               maxlength=\"35\" required #conf=\"ngModel\"/>\r\n                                        <span class=\"help-block\" *ngIf=\"conf?.touched && conf?.errors?.required\"\r\n                                              style=\"color:red\">\r\n                                            <small>{{\"THIS_FIELD_IS_REQUIRED*\" | translate}}</small>\r\n                                        </span>\r\n                                        <span class=\"help-block\"\r\n                                              *ngIf=\"conf?.dirty && resetPassword.confirmPassword !== resetPassword.newPassword\"\r\n                                              style=\"color:red\">\r\n                                            <small>{{\"PASSWORD_DO_NOY_MATCH\" | translate}}</small>\r\n                                        </span>\r\n                                        <div class=\"fg-actions d-flex justify-content-between\">\r\n                                            <div class=\"login-btn\">\r\n                                                <button type=\"button\" class=\"btn btn-outline-primary\"\r\n                                                        routerLink=\"/login\">\r\n                                                    <a class=\"text-decoration-none\">{{\"BACK_TO_LOGIN\" | translate}}</a>\r\n                                                </button>\r\n                                            </div>\r\n                                            <div class=\"recover-pass\">\r\n                                                <button class=\"btn btn-primary\" type=\"submit\"\r\n                                                        [disabled]=\"f.invalid || resetPassword.confirmPassword !== resetPassword.newPassword\">\r\n                                                    <a class=\"text-decoration-none text-white\">\r\n                                                        {{\"SUBMIT\" | translate}}\r\n                                                    </a>\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n<!--Forgot Password Ends-->\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { ChartistModule } from 'ng-chartist';\r\n//import { DashboardRoutingModule } from \"./dashboard-routing.module\";\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatchHeightModule } from \"../shared/directives/match-height.directive\";\r\nimport { ResetPasswordComponent } from './reset-password.component';\r\nimport { resetPassRoutingmodule } from './reset-password-routing.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { TranslateModule } from \"@ngx-translate/core\";\r\nimport { AuthService } from \"../pages/login/auth.service\";\r\n//import { resetPasswordRoutingmodule } from './reset-password-routing.module';\r\n// import { OtpVerifyComponent } from './otp-verify.component';\r\n// import { OtpRoutingmodule } from './otp-verify-routing.module';\r\n//import { DashboardComponent } from './dashboard.component';\r\n\r\n\r\n@NgModule({\r\n\timports: [\r\n\t\tCommonModule,\r\n\t\tNgbModule,\r\n\t\tFormsModule,\r\n\t\tresetPassRoutingmodule,\r\n\t\tChartistModule,\r\n\t\tMatchHeightModule,\r\n\t\tTranslateModule,\r\n\t\t// resetPasswordRoutingmodule,\r\n\t],\r\n\texports: [],\r\n\tdeclarations: [\r\n\t\tResetPasswordComponent\r\n\t],\r\n\tproviders: [AuthService],\r\n})\r\nexport class resetPassModule {\r\n}\r\n"],"sourceRoot":"webpack:///"}